import { EventsFolder } from './ipc'
import IPC from './ipc'

export default class IPCClient extends IPC<RemoteEvent> {
	Location = EventsFolder

	constructor() {
		super()
	}

	connect(object: RemoteEvent<Callback>, callback: (...args: unknown[]) => unknown) {
		return object.OnClientEvent.Connect(callback)
	}

	fire(object: RemoteEvent<Callback>, ...args: unknown[]) {
		object.FireServer(...args)
	}

	getEvent(name: string) {
		const foundEvent = this.eventMap.get(name)
		if (!foundEvent) {
			const Event = this.Location.WaitForChild(name) as RemoteEvent
			this.eventMap.set(name, Event)
			return Event
		} else {
			return foundEvent
		}
	}
}
