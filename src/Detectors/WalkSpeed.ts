import { Players, RunService } from '@rbxts/services'
import Detector from 'Detectors'
import Flagged from 'Flagged'
import { $print, $warn } from 'rbxts-transform-debug'
import { ipcClient, ipcServer } from 'Util/IPC'
import Threat, { ThreatLevel } from 'Util/Threat'

export default class Template extends Detector {
	Server(): void {
		ipcServer.on('return-walkspeed', (Player, walkspeed) => {
			const Character = Player.Character
			if (Character) {
				const Humanoid = Character.WaitForChild('Humanoid', 100) as Humanoid
				if (!Humanoid) {
					$warn(
						'Humanoid has been detected to be deleted, a humanoid is required to check the players walkspeed.'
					)
				} else {
					if (Humanoid.WalkSpeed !== walkspeed) {
						Flagged(Player, new Threat(ThreatLevel.High, 'walkspeed', 3))
					}
				}
			}
		})

		RunService.Heartbeat.Connect(() => ipcServer.broadcast('get-walkspeed'))
	}
	Client(): void {
		ipcClient.on('get-walkspeed', () => {
			const Player = Players.LocalPlayer
			const Character = Player.Character
			if (Character) {
				const Humanoid = Character.WaitForChild('Humanoid', 100) as Humanoid
				if (!Humanoid) {
					ipcClient.emit('return-walkspeed', math.huge)
				}
				ipcClient.emit('return-walkspeed', Humanoid.WalkSpeed)
			}
		})
	}
}
