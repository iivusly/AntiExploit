import { Players, RunService } from '@rbxts/services'
import Detector from 'Detectors'
import { $warn } from 'rbxts-transform-debug'
import { ipcClient, ipcServer } from 'Util/IPC'

export default class Template extends Detector {
	Server(): void {
		ipcServer.on('get-walkspeed', (player: Player) => {
			const Character = player.Character
			if (Character) {
				const Humanoid = Character.WaitForChild('Humanoid', 100) as Humanoid
				if (!Humanoid) {
					$warn(
						'Humanoid has been detected to be deleted, a humanoid is required to check the players walkspeed.'
					)
				}
				ipcServer.emit('return-walkspeed', player, Humanoid.WalkSpeed)
			}
		})
	}
	Client(): void {
		ipcClient.on('return-walkspeed', (walkspeed) => {
			const Player = Players.LocalPlayer
			const Character = Player.Character
			if (Character) {
				const Humanoid = Character.WaitForChild('Humanoid', 100) as Humanoid
				if (!Humanoid) {
				} else {
					if (Humanoid.WalkSpeed !== walkspeed) {
					}
				}
			}
		})
		RunService.RenderStepped.Connect(() => ipcClient.emit('get-walkspeed'))
	}
}
